using FieldGroove.Application.EmailService;
using FieldGroove.Domain.Models;
using iTextSharp.text;
using iTextSharp.text.pdf;
using iTextSharp.text.pdf.draw;

namespace FieldGroove.Application.GenerateLeadPDF
{
    public class GenerateLeadPDF
    {

        public static void LeadPDF(LeadsModel model)
        {
            using var Lead = new MemoryStream();
            float marginLeft = 35f;
            float marginRight = 35f; 
            var document = new Document(PageSize.A4, marginLeft, marginRight, 30, 30);
            PdfWriter writer = PdfWriter.GetInstance(document, Lead);

            writer.ViewerPreferences = PdfWriter.PageLayoutOneColumn |
                                      PdfWriter.PageModeUseNone |      // No extra panels on open
                                      PdfWriter.FitWindow |            // Fit page to window
                                      PdfWriter.DisplayDocTitle;

            document.Open();

            PdfContentByte cb = writer.DirectContent;
            cb.SetLineWidth(1f);
            cb.Rectangle(25, 25, PageSize.A4.Width - 50, PageSize.A4.Height - 50);
            cb.Stroke();
          

            var titleFont = FontFactory.GetFont(FontFactory.HELVETICA_BOLD,20,BaseColor.BLACK); 
            var subTitleFont = FontFactory.GetFont(FontFactory.HELVETICA_BOLDOBLIQUE,17,BaseColor.DARK_GRAY);

            document.Add(new Paragraph("Field Groove ", titleFont) { Alignment = Element.ALIGN_CENTER});
            document.Add(new Paragraph("Lead Is Created" , subTitleFont) { Alignment = Element.ALIGN_BASELINE, SpacingBefore=10f, SpacingAfter=20f });
            document.Add(new Paragraph("Lead Details"));

            PdfPTable table = new PdfPTable(2)
            {
                WidthPercentage = 100,
                SpacingBefore = 20f,
                SpacingAfter = 20f,
            };
            table.SetWidths(new float[] { 1f, 3f });
            table.SplitLate = false;
            table.SplitRows = false;

            void AddRow(string label, string value)
            {
                var cellLabel = new PdfPCell(new Phrase(label))
                {
                    PaddingBottom = 5f,
                    BackgroundColor = new BaseColor(240, 240, 240)
                };
                var cellValue = new PdfPCell(new Phrase(value))
                {
                    PaddingBottom = 5f,
                };
                table.AddCell(cellLabel);
                table.AddCell(cellValue);
            }

            AddRow("ID", model.Id.ToString()!);
            AddRow("ProjectName", model.ProjectName!);
            AddRow("Status", model.Status!);
            AddRow("Added", model.Added.ToString()!);
            AddRow("Type",model.Type?"Bussiness":"Personal");
            AddRow("Contact", model.Contact.ToString());
            AddRow("Action",model.Action!);
            AddRow("Assignee", model.Assignee!);
            AddRow("BidDate",model.BidDate.ToString()!);

            document.Add(table);

            document.Add(new LineSeparator(1f, 100f, BaseColor.BLACK, Element.ALIGN_CENTER, 2));

            document.Add(new Paragraph("Generated by FieldGroove System")
            {
                Alignment = Element.ALIGN_CENTER,
                SpacingBefore = 20f
            });
            PdfAction zoomToFitPage = PdfAction.JavaScript("this.zoomType = zoomtype.fitP;", writer);
            writer.AddJavaScript(zoomToFitPage);

            document.Close();

            EmailSender.EmailSendAsync(Lead.ToArray());
        }
    }
}
 